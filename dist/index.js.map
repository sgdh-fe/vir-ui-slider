{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["import Vir from 'vir'\n\nexport default function (options = {}) {\n  let {\n    lazyload = false,\n      wrapperSelector = 'ul',\n      slideSelector = 'ul > li',\n      nextSelector = '.next',\n      prevSelector = '.prev'\n  } = options\n\n  return Vir({\n    data: {\n      index: 0,\n      lock: false,\n      state: {}\n    },\n    events: {\n      ['click->' + nextSelector]: 'next',\n      ['click->' + prevSelector]: 'prev'\n    },\n    validate: {\n      index() {\n        if (this.get('lock')) {\n          return false\n        }\n      }\n    },\n    watch: {\n      index(result) {\n        let index = result.value\n        this.set('lock', true)\n        if (lazyload) {\n          this.lazyload(index)\n        }\n        this.$$(wrapperSelector).animate({\n          left: index * -100 + '%'\n        }, 500, () => {\n          this.set('lock', false)\n        })\n      }\n    },\n    methods: {\n      index(index) {\n        let len = this.get('len')\n        return index < 0 ? len - 1 : index % len\n      },\n      run(index) {\n        this.set('index', this.index(index))\n      },\n      prev() {\n        this.run(this.get('index') - 1)\n      },\n      next() {\n        this.run(this.get('index') + 1)\n      },\n      getState(index) {\n        let state = this.get('state')\n        if (state[index]) {\n          return true\n        }\n        state[index] = true\n        this.set('state', state)\n      },\n      lazyload(index) {\n        if (this.getState(index)) {\n          return\n        }\n        let $el = this.$$(slideSelector).eq(index).find('img[data-src]')\n        $el.attr('src', $el.attr('data-src'))\n      }\n    },\n    init() {\n      let len = this.$$(slideSelector).length\n      this.set('len', len / 1)\n      this.$$(wrapperSelector).css('width', 100 * len / 1 + '%')\n      this.$$(slideSelector).css('width', 100 / len + '%')\n    }\n  })\n}"],"names":["options","lazyload","wrapperSelector","slideSelector","nextSelector","prevSelector","Vir","get","result","index","value","set","$$","animate","len","run","state","getState","$el","eq","find","attr","length","css"],"mappings":";;;;;;;;;;;;;;;AAEA,YAAe,YAAwB;;;MAAdA,OAAc,uEAAJ,EAAI;0BAOjCA,OAPiC,CAEnCC,QAFmC;MAEnCA,QAFmC,qCAExB,KAFwB;8BAOjCD,OAPiC,CAGjCE,eAHiC;MAGjCA,eAHiC,yCAGf,IAHe;8BAOjCF,OAPiC,CAIjCG,aAJiC;MAIjCA,aAJiC,yCAIjB,SAJiB;8BAOjCH,OAPiC,CAKjCI,YALiC;MAKjCA,YALiC,yCAKlB,OALkB;8BAOjCJ,OAPiC,CAMjCK,YANiC;MAMjCA,YANiC,yCAMlB,OANkB;;;SAS9BC,IAAI;UACH;aACG,CADH;YAEE,KAFF;aAGG;KAJA;mCAON,YAAYF,YADf,IAC8B,MAD9B,UAEG,YAAYC,YAFf,IAE8B,MAF9B,UANS;cAUC;WAAA,mBACA;YACF,KAAKE,GAAL,CAAS,MAAT,CAAJ,EAAsB;iBACb,KAAP;;;KAbG;WAiBF;WAAA,iBACCC,MADD,EACS;;;YACRC,QAAQD,OAAOE,KAAnB;aACKC,GAAL,CAAS,MAAT,EAAiB,IAAjB;YACIV,QAAJ,EAAc;eACPA,QAAL,CAAcQ,KAAd;;aAEGG,EAAL,CAAQV,eAAR,EAAyBW,OAAzB,CAAiC;gBACzBJ,QAAQ,CAAC,GAAT,GAAe;SADvB,EAEG,GAFH,EAEQ,YAAM;gBACPE,GAAL,CAAS,MAAT,EAAiB,KAAjB;SAHF;;KAxBK;aA+BA;WAAA,iBACDF,MADC,EACM;YACPK,MAAM,KAAKP,GAAL,CAAS,KAAT,CAAV;eACOE,SAAQ,CAAR,GAAYK,MAAM,CAAlB,GAAsBL,SAAQK,GAArC;OAHK;SAAA,eAKHL,KALG,EAKI;aACJE,GAAL,CAAS,OAAT,EAAkB,KAAKF,KAAL,CAAWA,KAAX,CAAlB;OANK;UAAA,kBAQA;aACAM,GAAL,CAAS,KAAKR,GAAL,CAAS,OAAT,IAAoB,CAA7B;OATK;UAAA,kBAWA;aACAQ,GAAL,CAAS,KAAKR,GAAL,CAAS,OAAT,IAAoB,CAA7B;OAZK;cAAA,oBAcEE,KAdF,EAcS;YACVO,QAAQ,KAAKT,GAAL,CAAS,OAAT,CAAZ;YACIS,MAAMP,KAAN,CAAJ,EAAkB;iBACT,IAAP;;cAEIA,KAAN,IAAe,IAAf;aACKE,GAAL,CAAS,OAAT,EAAkBK,KAAlB;OApBK;cAAA,oBAsBEP,KAtBF,EAsBS;YACV,KAAKQ,QAAL,CAAcR,KAAd,CAAJ,EAA0B;;;YAGtBS,MAAM,KAAKN,EAAL,CAAQT,aAAR,EAAuBgB,EAAvB,CAA0BV,KAA1B,EAAiCW,IAAjC,CAAsC,eAAtC,CAAV;YACIC,IAAJ,CAAS,KAAT,EAAgBH,IAAIG,IAAJ,CAAS,UAAT,CAAhB;;KA1DK;QAAA,kBA6DF;UACDP,MAAM,KAAKF,EAAL,CAAQT,aAAR,EAAuBmB,MAAjC;WACKX,GAAL,CAAS,KAAT,EAAgBG,MAAM,CAAtB;WACKF,EAAL,CAAQV,eAAR,EAAyBqB,GAAzB,CAA6B,OAA7B,EAAsC,MAAMT,GAAN,GAAY,CAAZ,GAAgB,GAAtD;WACKF,EAAL,CAAQT,aAAR,EAAuBoB,GAAvB,CAA2B,OAA3B,EAAoC,MAAMT,GAAN,GAAY,GAAhD;;GAjEG,CAAP;;;;;"}